services:

  consul-server:
    image: hashicorp/consul:1.15
    container_name: consul-server
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    environment:
      - CONSUL_LOCAL_CONFIG={"datacenter":"dc1", "log_level":"INFO", "server":true}
    ports:
      - "8500:8500" # UI
      - "8600:8600/tcp" # DNS TCP
      - "8600:8600/udp" # DNS UDP
      - "8300:8300" # Server RPC
      - "8301:8301" # Serf LAN
      - "8302:8302" # Serf WAN
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 10s
      timeout: 5s
      retries: 5

  consul-config-loader:
    image: curlimages/curl:8.16.0
    container_name: consul-config-loader
    volumes:
      - ./consul:/consul
    command: [ "/bin/sh", "/consul/upload-to-consul.sh" ]
    depends_on:
      consul-server:
        condition: service_healthy

  consul-client:
    image: hashicorp/consul:1.15
    container_name: consul-client
    command: "agent -node=client-1 -join=consul-server -client=0.0.0.0"
    depends_on:
      - consul-server
    environment:
      - CONSUL_LOCAL_CONFIG={"datacenter":"dc1", "log_level":"INFO"}
    ports:
      - "8501:8500"

  keycloak-secret-loader:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    container_name: keycloak-secret-loader
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - CONSUL_URL=http://consul-server:8500
    volumes:
      - ./keycloak:/keycloak
    command: >
      sh -c "
      echo 'Ожидание готовности Keycloak...' &&
      while ! curl -s http://keycloak:8080; do sleep 5; done &&
      echo 'Keycloak готов - начинаем получение секретов' &&
      chmod +x /app/scripts/get-secrets.sh &&
      sh /app/scripts/get-secrets.sh"
    depends_on:
      - keycloak
      - keycloak-config-loader
      - consul-server

  keycloak-config-loader:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    container_name: keycloak-config-loader
    volumes:
      - ./keycloak:/keycloak
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_REALM=master
    entrypoint: [ ]
    command: >
      /bin/sh -c "
      echo 'Ожидание готовности Keycloak...' &&
      while ! curl -s http://keycloak:8080; do
        sleep 5;
      done &&
      echo 'Keycloak готов - начинаем конфигурацию' &&
      echo 'Загрузка скоупов...' &&
      sh /app/scripts/upload-scopes-to-keycloak.sh &&
      echo 'Загрузка клиентов...' &&
      sh /app/scripts/upload-clients-to-keycloak.sh"
    depends_on:
      - keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=keycloak
    ports:
      - "8080:8080"
    command:
      - start-dev

  front:
    container_name: front
    build:
      context: ./front
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8000:8000"
    depends_on:
      - keycloak-secret-loader

  gateway-service:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8010:8010"
    depends_on:
      - keycloak-secret-loader

  accounts-db:
    image: postgres:latest
    container_name: accounts_db_container
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sa
      POSTGRES_DB: accounts_db
    ports:
      - "5430:5432"

  accounts:
    container_name: accounts
    build:
      context: ./accounts
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_R2DBC_URL=r2dbc:postgresql://accounts-db:5432/accounts_db
      - SPRING_DATASOURCE_URL=jdbc:postgresql://accounts-db:5432/accounts_db
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8001:8001"
    depends_on:
      - accounts-db
      - keycloak-secret-loader

  blocker:
    container_name: blocker
    build:
      context: ./blocker
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8002:8002"
    depends_on:
      - keycloak-secret-loader

  cash:
    container_name: cash
    build:
      context: ./cash
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8003:8003"
    depends_on:
      - keycloak-secret-loader

  exchange:
    container_name: exchange
    build:
      context: ./exchange
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8004:8004"
    depends_on:
      - keycloak-secret-loader

  exchange-generator:
    container_name: exchange-generator
    build:
      context: ./exchange-generator
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8005:8005"
    depends_on:
      - keycloak-secret-loader

  notifications:
    container_name: notifications
    build:
      context: ./notifications
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8006:8006"
    depends_on:
      - keycloak-secret-loader

  transfer:
    container_name: transfer
    build:
      context: ./transfer
      dockerfile: Dockerfile
    environment:
      - KEYCLOAK_ISSUE_URL=http://keycloak:8080/realms/master
      - CONSUL_HOST=consul-client
    ports:
      - "8007:8007"
    depends_on:
      - keycloak-secret-loader